nmap s <Plug>(easymotion-s2)
nmap <leader>f <Plug>(easymotion-f)
nmap <leader>t <Plug>(easymotion-t)
nmap <leader>F <Plug>(easymotion-F)
nmap <leader>T <Plug>(easymotion-T)
nmap <leader>j <Plug>(easymotion-j)
nmap <leader>k <Plug>(easymotion-k)
nmap <leader>w <Plug>(easymotion-w)
nmap <leader>b <Plug>(easymotion-b)
nmap <leader>ge <Plug>(easymotion-ge)
nmap <leader>e <Plug>(easymotion-e)

map s <Plug>(easymotion-s2)
map <leader>f <Plug>(easymotion-f)
map <leader>t <Plug>(easymotion-t)
map <leader>F <Plug>(easymotion-F)
map <leader>T <Plug>(easymotion-T)
map <leader>j <Plug>(easymotion-j)
map <leader>k <Plug>(easymotion-k)
map <leader>w <Plug>(easymotion-w)
map <leader>b <Plug>(easymotion-b)
map <leader>ge <Plug>(easymotion-ge)
map <leader>e <Plug>(easymotion-e)

vmap <leader>f <Plug>(easymotion-f)
vmap <leader>F <Plug>(easymotion-F)
vmap <leader>j <Plug>(easymotion-j)
vmap <leader>k <Plug>(easymotion-k)
vmap <leader>w <Plug>(easymotion-w)
vmap <leader>b <Plug>(easymotion-b)
vmap <leader>ge <Plug>(easymotion-ge)

map / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)

map n <Plug>(easymotion-next)
map N <Plug>(easymotion-prev)

let g:EasyMotion_smartcase = 1
